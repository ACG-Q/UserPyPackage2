name: 自动打包Python项目

on:
  issues:
    types: [opened]

jobs:
  package:
    if: contains(github.event.issue.labels.*.name, '打包请求') && contains(github.event.issue.labels.*.name, 'pyinstaller')
    runs-on: ubuntu-latest

    steps:
    - name: 检出仓库代码
      uses: actions/checkout@v3

    - name: 获取 Issue 信息
      id: get-issue
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        ISSUE_BODY=$(gh issue view ${{ github.event.issue.number }} --json body -q .body)
        echo "body=$ISSUE_BODY" >> $GITHUB_ENV

    - name: 检查并下载 ZIP 文件
      run: |
        FILE_URL=$(echo "$body" | grep -Eo '(https://github\.com/.*/.*/files/\d+/.*\.zip)')
        if [ -z "$FILE_URL" ]; then
          echo "未在 Issue 中找到 ZIP 文件链接"
          exit 1
        fi
        echo "发现 ZIP 文件链接：$FILE_URL"
        wget -O project.zip "$FILE_URL"

    - name: 解压文件
      run: |
        mkdir project
        unzip project.zip -d project

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        if [ -f project/requirements.txt ]; then
          pip install -r project/requirements.txt
        fi

    - name: 使用 PyInstaller 打包
      run: |
        pip install pyinstaller
        if [ -f project/*.spec ]; then
          pyinstaller project/*.spec
        else
          pyinstaller --onefile project/*.py
        fi

    - name: 创建 GitHub Release 并上传打包结果
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG_NAME="v$(date +%Y%m%d%H%M%S)"
        gh release create "$TAG_NAME" ./dist/* \
          --title "打包结果: $TAG_NAME" \
          --notes-file project/README.md

    - name: 关闭 Issue
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh issue comment ${{ github.event.issue.number }} --body "打包完成！请在 [GitHub Releases](https://github.com/${{ github.repository }}/releases/tag/$TAG_NAME) 中查看结果。"
        gh issue edit ${{ github.event.issue.number }} --state closed
